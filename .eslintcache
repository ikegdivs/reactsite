[{"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\reportWebVitals.js":"1","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\App.js":"2","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\index.js":"3","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\MenuComponent.js":"4","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\topics.js":"5"},{"size":362,"mtime":1608670571770,"results":"6","hashOfConfig":"7"},{"size":634,"mtime":1610579168807,"results":"8","hashOfConfig":"7"},{"size":547,"mtime":1610568108894,"results":"9","hashOfConfig":"7"},{"size":1926,"mtime":1610579291249,"results":"10","hashOfConfig":"7"},{"size":2593,"mtime":1610579091104,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r9kxe1",{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\reportWebVitals.js",[],"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\App.js",[],"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\index.js",[],["24","25"],"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\MenuComponent.js",["26"],"import React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\n//import logo from '../assets/images/logo.svg';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n  CardTitle } from 'reactstrap';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedTopic: null\r\n        }\r\n    }\r\n\r\n    onTopicSelect(topic) {\r\n        this.setState({ selectedTopic: topic});\r\n    }\r\n\r\n    renderTopic(topic) {\r\n        if (topic != null)\r\n            return(\r\n                <Card>\r\n                    <CardImg top src={topic.image} alt={topic.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{topic.name}</CardTitle>\r\n                      <CardText>{topic.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const menu = this.props.topics.map((topic) => {\r\n            return (\r\n              <div  className=\"col-12 col-md-5 m-1\">\r\n                <Card key={topic.id}\r\n                  onClick={() => this.onTopicSelect(topic)}>\r\n                  <CardImg width=\"100%\" src={topic.image} alt={topic.name} />\r\n                  <CardImgOverlay>\r\n                      <CardTitle>{topic.name}</CardTitle>\r\n                  </CardImgOverlay>\r\n                </Card>\r\n              </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div  className=\"col-12 col-md-5 m-1\">\r\n                    {this.renderTopic(this.state.selectedTopic)}\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\topics.js",[],{"ruleId":"27","replacedBy":"28"},{"ruleId":"29","replacedBy":"30"},{"ruleId":"31","severity":1,"message":"32","line":2,"column":10,"nodeType":"33","messageId":"34","endLine":2,"endColumn":15},"no-native-reassign",["35"],"no-negated-in-lhs",["36"],"no-unused-vars","'Media' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]