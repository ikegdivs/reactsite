[{"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\reportWebVitals.js":"1","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\App.js":"2","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\index.js":"3","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\MenuComponent.js":"4","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\dishes.js":"5"},{"size":362,"mtime":1608670571770,"results":"6","hashOfConfig":"7"},{"size":679,"mtime":1610577806070,"results":"8","hashOfConfig":"7"},{"size":547,"mtime":1610568108894,"results":"9","hashOfConfig":"7"},{"size":1905,"mtime":1610576737955,"results":"10","hashOfConfig":"7"},{"size":6199,"mtime":1610576829553,"results":"11","hashOfConfig":"7"},{"filePath":"12","messages":"13","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"r9kxe1",{"filePath":"14","messages":"15","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"18"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"21","usedDeprecatedRules":"18"},{"filePath":"22","messages":"23","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\reportWebVitals.js",[],"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\App.js",["24"],"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\index.js",[],["25","26"],"C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\MenuComponent.js",["27"],"import React, { Component } from 'react';\r\nimport { Media } from 'reactstrap';\r\n//import logo from '../assets/images/logo.svg';\r\nimport { Card, CardImg, CardImgOverlay, CardText, CardBody,\r\n  CardTitle } from 'reactstrap';\r\n\r\nclass Menu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n            selectedDish: null\r\n        }\r\n    }\r\n\r\n    onDishSelect(dish) {\r\n        this.setState({ selectedDish: dish});\r\n    }\r\n\r\n    renderDish(dish) {\r\n        if (dish != null)\r\n            return(\r\n                <Card>\r\n                    <CardImg top src={dish.image} alt={dish.name} />\r\n                    <CardBody>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                      <CardText>{dish.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            );\r\n        else\r\n            return(\r\n                <div></div>\r\n            );\r\n    }\r\n\r\n    render() {\r\n        const menu = this.props.dishes.map((dish) => {\r\n            return (\r\n              <div  className=\"col-12 col-md-5 m-1\">\r\n                <Card key={dish.id}\r\n                  onClick={() => this.onDishSelect(dish)}>\r\n                  <CardImg width=\"100%\" src={dish.image} alt={dish.name} />\r\n                  <CardImgOverlay>\r\n                      <CardTitle>{dish.name}</CardTitle>\r\n                  </CardImgOverlay>\r\n                </Card>\r\n              </div>\r\n            );\r\n        });\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    {menu}\r\n                </div>\r\n                <div className=\"row\">\r\n                  <div  className=\"col-12 col-md-5 m-1\">\r\n                    {this.renderDish(this.state.selectedDish)}\r\n                  </div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Menu;","C:\\Users\\issac\\Documents\\GitHub\\reactsite\\src\\dishes.js",[],{"ruleId":"28","severity":1,"message":"29","line":5,"column":8,"nodeType":"30","messageId":"31","endLine":5,"endColumn":12},{"ruleId":"32","replacedBy":"33"},{"ruleId":"34","replacedBy":"35"},{"ruleId":"28","severity":1,"message":"36","line":2,"column":10,"nodeType":"30","messageId":"31","endLine":2,"endColumn":15},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","no-native-reassign",["37"],"no-negated-in-lhs",["38"],"'Media' is defined but never used.","no-global-assign","no-unsafe-negation"]